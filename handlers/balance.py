from aiogram import types, Router
from aiogram.filters import Command
from services.iris_api import iris

router = Router()


@router.message(Command("balance"))
async def cmd_balance(message: types.Message):
    try:
        data = await iris.balance()
        gold = data.get("gold", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ–ª–¥—É")
        sweets = data.get("sweets", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Ä–∏—Å–∫–∏")
        donate_score = data.get("donate_score", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ –¥–æ–Ω–∞—Ç–∞")

        await message.answer(
            f"üìä *–í–∞—à –±–∞–ª–∞–Ω—Å:*\n\n"
            f"üåï –ì–æ–ª–¥–∞: {gold}\n"
            f"üç¨ –ò—Ä–∏—Å–∫–∏: {sweets}\n"
            f"üéñ –î–æ–Ω–∞—Ç–Ω—ã–µ –æ—á–∫–∏: {donate_score}",
            parse_mode="Markdown"
        )
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
