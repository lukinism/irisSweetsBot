from aiogram import types, Router
from aiogram.filters import Command
from services.iris_api import iris
from config import ADMIN_IDS

router = Router()

@router.message(Command("pocket_enable"))
async def cmd_pocket_enable(message: types.Message):
    await handle_simple_admin_command(
        message,
        iris.enable_pocket,
        success_text="‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏—Ä–∏—Å–∫–∏ –∏ –≥–æ–ª–¥—É.",
        fail_text="–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ"
    )


@router.message(Command("pocket_disable"))
async def cmd_pocket_disable(message: types.Message):
    await handle_simple_admin_command(
        message,
        iris.disable_pocket,
        success_text="üõë –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Ä–∏—Å–æ–∫ –∏ –≥–æ–ª–¥—ã —Ç–µ–ø–µ—Ä—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.",
        fail_text="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ"
    )

async def handle_simple_admin_command(message: types.Message, api_method, success_text: str, fail_text: str
):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    try:
        result = await api_method()
        if result.get("response") == "ok":
            await message.answer(success_text)
        else:
            await message.answer(f"‚ùå {fail_text}: {result}")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
